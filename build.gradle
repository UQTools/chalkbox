plugins {
    id 'java'
    id 'application'
    id "org.sonarqube" version "5.0.0.4638"
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

javafx {
    version = "21"
    modules = [ 'javafx.controls', 'javafx.base', 'javafx.fxml', 'javafx.graphics', 'javafx.media']
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDir 'test/chalkbox'
        }
        resources {
            srcDirs "test/resources"
            exclude "**/*.java"
        }
    }
}

sourceSets.test.resources

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation group: 'junit', name: 'junit', version: '4.13.2'
    // Library for JSON
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // Command line argument parsing
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.7.0'
    // Reflect for loading class in the GUI
    implementation "org.reflections:reflections:0.10.2"
    // MongoDB Driver
    implementation 'org.mongodb:mongodb-driver:3.12.14'
    // File IO library for copying directories
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    // Library for parsing the java AST
    implementation 'com.github.javaparser:javaparser-core:3.25.10'
    // YAML parser
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'
    // JavaDoc reverse lookup
    implementation 'com.github.therapi:therapi-runtime-javadoc:0.15.0'
    implementation 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'

    // V2 Dependencies
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.guava:guava:33.2.0-jre'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'com.google.dagger:dagger:2.51.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.51.1'
}

mainClassName = 'chalkbox.api.ChalkBox'

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.implementation
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveBaseName = project.name
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    archiveBaseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

